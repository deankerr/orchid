---
description: 
globs: 
alwaysApply: true
---
# ORCHID Database Analysis Report

## Executive Summary

This report provides statistical analysis of the ORCHID database to inform frontend design decisions, particularly around string length handling, variant display, and query patterns. The data represents a snapshot of the OpenRouter ecosystem as aggregated by ORCHID.

## Entity Counts & Distribution

### Core Entities
- **Models**: 395 total
- **Endpoints**: 668 total  
- **Providers**: 63 unique providers
- **Model-Endpoint Ratio**: 1.69 endpoints per model (2.52 excluding models with 0 endpoints)

### Model-Endpoint Relationships
- **Models with 0 endpoints**: 130 (32.9%) - Normal state for historical/removed models
- **Models with endpoints**: 265 (67.1%)
- **Distribution**: Most models have 1-2 endpoints
  - 1 endpoint: 149 models (37.7%)
  - 2 endpoints: 55 models (13.9%)
  - 3+ endpoints: 61 models (15.4%)
  - **Maximum**: 23 endpoints (Meta Llama 3.3 70B Instruct) - indicates high provider competition

## String Length Analysis (Critical for UI Design)

### Model Names
- **Range**: 8-44 characters
- **Mean**: 23.7 characters
- **Median**: 23 characters
- **Longest**: "Nous: DeepHermes 3 Llama 3 8B Preview (free)" (44 chars)

### Model Slugs (API Identifiers)
- **Range**: 9-49 characters
- **Mean**: 25.6 characters  
- **Median**: 25 characters
- **Longest**: "sentientagi/dobby-mini-unhinged-plus-llama-3.1-8b" (49 chars)

### Model Permaslugs (Permanent Identifiers)
- **Range**: 11-49 characters
- **Mean**: 26.5 characters
- **Median**: 25 characters
- **Longest**: "sentientagi/dobby-mini-unhinged-plus-llama-3.1-8b" (49 chars)

### Provider Names
- **Range**: 3-24 characters
- **Mean**: 10.2 characters
- **Median**: 8 characters
- **Longest**: "Amazon Bedrock (US-WEST)" (24 chars)

## Variant Analysis

### Variant Distribution
- **standard**: 244 models (76.0%) - Default production variant
- **free**: 60 models (18.7%) - Free tier offerings
- **beta**: 11 models (3.4%) - Experimental versions
- **thinking**: 4 models (1.2%) - Reasoning-focused variants  
- **extended**: 2 models (0.6%) - Enhanced versions

### Multi-Variant Models
- **Total**: 55 models (13.9%) offer multiple variants
- **Implication**: Popular open-source models get different hosting tiers

## Tokenizer Distribution

### Top Tokenizers
- **Other**: 89 models (22.4%) - Diverse/proprietary tokenizers
- **Mistral**: 55 models (13.8%)
- **Llama3**: 51 models (12.8%)
- **GPT**: 35 models (8.8%)
- **Qwen**: 35 models (8.8%)
- **Llama2**: 26 models (6.6%)
- **Gemini**: 26 models (6.6%)

## Provider Distribution

### Provider Count
- **Total Providers**: 63 (relatively small, stable dataset)
- **Top 5 providers**: Host 44% of all endpoints (236/668)
- **Provider role**: Link endpoints to data policies, not a primary query target

### Leading Providers by Endpoint Count
1. **DeepInfra**: 49 endpoints, 48 unique models
2. **Together**: 48 endpoints, 44 unique models
3. **Chutes**: 47 endpoints, 47 unique models
4. **NovitaAI**: 39 endpoints, 39 unique models
5. **OpenAI**: 37 endpoints, 36 unique models

## Development Implications

### Frontend Design Constraints
- **Monospace Layout**: Must accommodate 49+ character strings
- **Responsive Design**: Critical for mobile display of long identifiers
- **Truncation Strategy**: Required for model slugs and names
- **Tooltip/Expansion**: Essential for full string visibility

### Query Patterns
- **Primary Query Table**: or_endpoints (denormalized for performance)
- **Model Discovery**: Query endpoints directly, not models table
- **Variant Handling**: Clear visual distinction needed for standard/free/beta

### Data Characteristics
- **Lightweight Records**: Simple strings and numbers, minimal storage requirements
- **String Validation**: Wide variance in identifier lengths (up to 49 chars)
- **Expected States**: Models without endpoints are normal (historical records)

## Recommendations

### Immediate Actions
1. **UI Components**: Design for 50+ character string display
2. **Search/Filter**: Implement provider and variant-based filtering
3. **Data Validation**: Add string length monitoring for schema evolution

### Medium-term Considerations
1. **Provider Taxonomy**: Consider grouping related providers
2. **Model Lifecycle**: Track and handle models entering/leaving the ecosystem
3. **Variant Strategy**: Develop clear UX patterns for variant selection

### Long-term Planning
1. **Scalability**: Current entity counts manageable, but growth monitoring needed
2. **Data Quality**: Implement automated validation for new provider integrations
3. **Schema Evolution**: Plan for identifier length increases as ecosystem grows

## Summary

The ORCHID database contains moderate volumes of lightweight data with specific frontend challenges around string length display. Key considerations:

1. **String lengths** up to 49 characters require careful UI design in monospace layouts
2. **or_endpoints** is the primary query table with denormalized data for performance
3. **Models without endpoints** (32.9%) are expected - they represent historical records
4. **Variant types** (standard/free/beta/thinking) need clear visual distinction
5. **Provider data** is minimal and primarily links endpoints to data policies

The data structure is already optimized for ORCHID's query patterns, with appropriate denormalization in place. 